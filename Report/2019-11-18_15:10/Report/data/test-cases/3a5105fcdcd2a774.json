{
  "uid" : "3a5105fcdcd2a774",
  "name" : "test_modify_title[艾拉-45-艾拉-45]",
  "fullName" : "Case.test_home.TestHome#test_modify_title",
  "historyId" : "6ccd225b285a00749fb486a57a84f811",
  "time" : {
    "start" : 1574061131426,
    "stop" : 1574061170089,
    "duration" : 38663
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <Case.test_home.TestHome object at 0x10c25eeb8>, name = '艾拉-45'\nexpect_name = '艾拉-45'\n\n    @pytest.mark.parametrize(\"name,expect_name\", [(\"Ayla45\", \"Ayla45\"),\n                                                  (\"Ayla 45\", \"Ayla 45\"),\n                                                  (\"Ayla_45\", \"Ayla_45\"),\n                                                  (\"Ayla45Ayla45Ayla45123\", \"Ayla45Ayla45Ayla4512\"),\n                                                   (\"艾拉-45\", \"艾拉-45\")])\n    def test_modify_title(self, name, expect_name):\n        # self.name = self.home.modify_title(name)\n        self.home.modify_title(name)\n>       actual_name = self.home.get_home_name()\n\nCase/test_home.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPage/home_page.py:30: in get_home_name\n    text = self.find_element_until_visibility(self._home_name).text\nCommon/base_page.py:28: in find_element_until_visibility\n    ele = WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e888e25b-aef1-45c0-937a-960cb959411c\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10c25e0b8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1574061017137,
      "stop" : 1574061029869,
      "duration" : 12732
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1574061223869,
      "stop" : 1574061224999,
      "duration" : 1130
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Case"
  }, {
    "name" : "suite",
    "value" : "test_home"
  }, {
    "name" : "subSuite",
    "value" : "TestHome"
  }, {
    "name" : "host",
    "value" : "ZTL.local"
  }, {
    "name" : "thread",
    "value" : "4015-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Case.test_home"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expect_name",
    "value" : "'艾拉-45'"
  }, {
    "name" : "name",
    "value" : "'艾拉-45'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3a5105fcdcd2a774.json",
  "parameterValues" : [ "'艾拉-45'", "'艾拉-45'" ]
}